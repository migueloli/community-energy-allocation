[versions]
spring-boot = "3.4.2"
spring-dependency-management = "1.1.7"
spring-security-test = "6.4.2"
spring-openapi = "2.8.4"
jjwt = "0.12.6"
lombok = "1.18.36"
mapstruct = "1.6.3"
opencsv = "5.10"
resilience4j = "2.3.0"
bucket4j = "8.10.1"
mockito = "5.15.2"
junit = "5.11.4"
mongock = "5.5.0"

[libraries]
# Spring boot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-data-mongodb = { module = "org.springframework.boot:spring-boot-starter-data-mongodb", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "spring-boot" }

# JWT
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

# Data
opencsv = { module = "com.opencsv:opencsv", version.ref = "opencsv" }

# Lombok
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

# MapStruct
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# Resilience4j
resilience4j-spring-boot = { module = "io.github.resilience4j:resilience4j-spring-boot3", version.ref = "resilience4j" }
resilience4j-circuitbreaker = { module = "io.github.resilience4j:resilience4j-circuitbreaker", version.ref = "resilience4j" }
resilience4j-timelimiter = { module = "io.github.resilience4j:resilience4j-timelimiter", version.ref = "resilience4j" }

# Bucket4j
bucket4j-core = { module = "com.bucket4j:bucket4j-core", version.ref = "bucket4j" }
bucket4j-redis = { module = "com.bucket4j:bucket4j-redis", version.ref = "bucket4j" }

# Mongock
mongock-springboot = { module = "io.mongock:mongock-springboot", version.ref = "mongock" }
mongock-core = { module = "io.mongock:mongock-core", version.ref = "mongock" }
mongock-mongodb-driver = { module = "io.mongock:mongodb-springdata-v4-driver", version.ref = "mongock" }

# Spring OpenAPI
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-openapi" }

# Spring Test
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security-test" }

# JUnit
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }

# Mockito
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }

[bundles]
spring-boot-starter = ["spring-boot-starter-web", "spring-boot-starter-data-mongodb", "spring-boot-starter-security", "spring-boot-starter-validation", "spring-boot-starter-actuator", "spring-boot-starter-aop", "spring-boot-starter-data-redis", "spring-boot-starter-cache"]
spring-boot-test = ["spring-boot-starter-test", "spring-security-test"]
resilience4j = ["resilience4j-spring-boot", "resilience4j-circuitbreaker", "resilience4j-timelimiter"]
bucket4j = ["bucket4j-core", "bucket4j-redis"]
mongock = ["mongock-springboot", "mongock-core", "mongock-mongodb-driver"]
